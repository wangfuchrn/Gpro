<?xml version="1.0" encoding="UTF-8" ?>
<!-- 后台dao层，用来访问数据库 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 通过命名空间绑定到接口 -->
<mapper namespace="com.zhkuchen.project.assess.mapper.ExaminationRecordMapper">
  <!-- 查询的方法有个returnType -->
  <!-- xml里面那些对应select的，有个返回类型就是指定实体类或者map -->
  <resultMap type="ExaminationRecord" id="ExaminationRecordResult">
        <id column="id" property="id"/>
        <result column="dept_id" property="deptId"/>
        <result column="user_id" property="userId"/>
        <result column="examination_id" property="examinationId"/>
        <result column="start_time" property="startTime"/>
        <result column="finish_time" property="finishTime"/>
        <result column="mark_status" property="markStatus"/>
        <result column="score" property="score"/>
        <result column="correct_number" property="correctNumber"/>
        <result column="incorrect_number" property="incorrectNumber"/>
        <result column="submit_status" property="submitStatus"/>
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
        <result column="del_flag" property="delFlag"/>
        <association column="dept_id" property="dept" javaType="SysDept" resultMap="deptResult" />
        <association column="examination_id" property="examination" javaType="Examination" resultMap="examinationResult" />
  </resultMap>

  <resultMap id="deptResult" type="SysDept">
    <id     property="deptId"   column="dept_id"     />
    <result property="parentId" column="parent_id"   />
    <result property="deptName" column="dept_name"   />
    <result property="orderNum" column="order_num"   />
    <result property="leader"   column="leader"      />
    <result property="status"   column="dept_status" />
  </resultMap>

  <resultMap id="examinationResult" type="Examination">
    <id column="id" property="id"/>
    <result column="dept_id" property="deptId"/>
    <result column="examination_name" property="examinationName"/>
    <result column="attention" property="attention"/>
    <result column="start_time" property="startTime"/>
    <result column="finish_time" property="finishTime" />
    <result column="total_score" property="totalScore"/>
    <result column="status" property="status"/>
    <result column="remark" property="remark"/>
  </resultMap>

  <sql id="selectExaminationRecordVo">
    select d.id,d.dept_id,d.user_id,d.examination_id,d.start_time,d.finish_time,d.mark_status,d.score,d.correct_number,d.incorrect_number,d.submit_status,d.create_by,d.create_time,d.update_by,d.update_time,d.del_flag
    from exam_examination_record d
  </sql>

  <!-- 模糊查询 -->
  <select id="findList" resultMap="ExaminationRecordResult" parameterType="ExaminationRecord">
      select d.id,d.dept_id,d.user_id,d.examination_id,d.start_time,d.finish_time,d.mark_status,d.score,d.correct_number,d.incorrect_number,d.submit_status,d.create_by,d.create_time,d.update_by,d.update_time,d.del_flag,
      dt.dept_name, dt.leader,
      e.examination_name
      from exam_examination_record d
      left join sys_dept dt on d.dept_id = dt.dept_id
      left join exam_examination e on d.examination_id = e.id
      WHERE d.del_flag = '0'
      <if test="deptId != null and deptId != 0">
        and d.dept_id = #{deptId}
         OR d.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET (#{deptId},ancestors) )
      </if>
      <!-- 数据范围过滤 -->
      ${dataScope}
  </select>

  <select id="findListById" resultMap="ExaminationRecordResult" parameterType="Long">
    select d.id,d.dept_id,d.user_id,d.examination_id,d.start_time,d.finish_time,d.mark_status,d.score,d.correct_number,d.incorrect_number,d.submit_status,d.create_by,d.create_time,d.update_by,d.update_time,d.del_flag,
    e.examination_name
      from exam_examination_record d
      left join exam_examination e on d.examination_id = e.id
      <!-- left join sys_user u on d.user_id = u.user_id -->
      WHERE d.del_flag = '0' and d.id = #{id}
  </select>

  <select id="findSubmitedByUserId" resultMap="ExaminationRecordResult" parameterType="ExaminationRecord">
    select d.id,d.dept_id,d.user_id,d.examination_id,d.start_time,d.finish_time,d.mark_status,d.score,d.correct_number,d.incorrect_number,d.submit_status,d.create_by,d.create_time,d.update_by,d.update_time,d.del_flag,
    e.examination_name,e.status
    from exam_examination_record d
    left join exam_examination e on d.examination_id = e.id
    where d.user_id = #{userId}
  </select>

  <select id="findByUserIdAndExamIdAndDeptId" resultMap="ExaminationRecordResult" parameterType="ExaminationRecord">
    <include refid="selectExaminationRecordVo" />
    where d.dept_id = #{deptId} and d.user_id = #{userId} and d.examination_id = #{examinationId}
  </select>

  <insert id="insert" parameterType="ExaminationRecord">
    INSERT INTO exam_examination_record (
      <if test="id != null and id != 0">id,</if>
      <if test="deptId != null and deptId != 0">dept_id,</if>
      <if test="userId != null and userId != 0">user_id,</if>
      <if test="examinationId != null and examinationId != ''">examination_id,</if>
      <if test="startTime != null">start_time,</if>
      <if test="finishTime != null">finish_time,</if>
      <if test="markStatus != null">mark_status,</if>
      <if test="score != null">score,</if>
      <if test="correctNumber != null">correct_number,</if>
      <if test="incorrectNumber != null">incorrect_number,</if>
      <if test="submitStatus != null">submit_status,</if>
      <if test="createBy != null and createBy != ''">create_by,</if>
      create_time
      )values(
      <if test="id != null and id != 0">#{id},</if>
      <if test="deptId != null and deptId != 0">#{deptId},</if>
      <if test="userId != null and userId != 0">#{userId},</if>
      <if test="examinationId != null and examinationId != 0">#{examinationId},</if>
      <if test="startTime != null">sysdate(),</if>
      <if test="finishTime != null">#{finishTime},</if>
      <if test="markStatus != null">#{markStatus},</if>
      <if test="score != null">#{score},</if>
      <if test="correctNumber != null">#{correctNumber},</if>
      <if test="incorrectNumber != null">#{incorrectNumber},</if>
      <if test="submitStatus != null">#{submitStatus},</if>
      <if test="createBy != null and createBy != ''">#{createBy},</if>
      sysdate()
    )
  </insert>

  <update id="update" parameterType="ExaminationRecord">
    update exam_examination_record
    <set>
      <if test="deptId != null">dept_id = #{deptId},</if>
      <if test="userId != null">user_id = #{userId},</if>
      <if test="examinationId != null">examination_id = #{examinationId},</if>
      <if test="finishTime != null">finish_time = sysdate(),</if>
      <if test="markStatus != null">mark_status = #{markStatus},</if>
      <if test="score != null">score = #{score},</if>
      <if test="correctNumber != null">correct_number = #{correctNumber},</if>
      <if test="incorrectNumber != null">incorrect_number = #{incorrectNumber},</if>
      <if test="submitStatus != null">submit_status = '1',</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      update_time = sysdate()
    </set>
    where id = #{id}
  </update>

  <update id="updateSubmitStatus" parameterType="Long">
      UPDATE exam_examination_record
      <set>
        <if test="finishTime != null">finish_time = sysdate(),</if>
        <if test="submitStatus != null">submit_status = '1',</if>
      </set>
      WHERE id = #{id}
  </update>

  <update id="updateMarkStatus" parameterType="Long">
      UPDATE exam_examination_record
      <set>
        <if test="updateTime != null">update_time = sysdate(),</if>
        <if test="markStatus != null">mark_status = '1',</if>
      </set>
      WHERE id = #{id}
  </update>

  <delete id="delete" parameterType="Long">
      UPDATE exam_examination_record SET del_flag = '2' WHERE id = #{id}
  </delete>

  <delete id="deleteAll" parameterType="Long">
      UPDATE exam_examination_record SET del_flag = '2' WHERE id in
      <foreach collection="array" item="id" open="(" separator="," close=")">
        #{id}
      </foreach> 
  </delete>

</mapper>

